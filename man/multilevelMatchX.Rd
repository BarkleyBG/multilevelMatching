% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/multilevelMatchX.r, R/multilevelMatching.r
\name{multilevelMatchX}
\alias{multilevelMatchX}
\title{multilevel treatment stratification on X}
\usage{
multilevelMatchX(Y, W, X)

multilevelMatchX(Y, W, X)
}
\arguments{
\item{Y}{response vector (1 x n)}

\item{W}{treatment vector (1 x n)}

\item{X}{covariate matrix (p x n) with no intercept}

\item{Y}{continuous response vector (1 x n)}

\item{W}{treatment vector (1 x n) with numerical values indicating treatment groups}

\item{X}{covariate matrix (p x n) with no intercept}

\item{GPSM}{indicator of the methods used for estimating GPS, options include "multinomiallogisticReg", "ordinallogisticReg", and "existing"}

\item{NS}{(only required in the function multilevelGPSStratification) number of strata}

\item{linearp}{(only required in the function multilevelGPSStratification) indicator of subclassification on GPS (=0) or linear predictor of GPS (=1)}

\item{nboot}{(only required in the function multilevelGPSStratification) number of boot replicates for variance estimation}
}
\value{
A list with 2 elements: tauestimate, varestimate

A list with 2 elements: tauestimate, varestimate, varestimateAI2012(only for multilevelGPSMatch), analysisidx (when Trimming=1)
tauestimate is a vector of estimates for pairwise treatment effects
varestimate is a vector of variance estimates for tauestimate, using Abadie&Imbens(2006)'s method
varestimateAI2012 is a vector of variance estimates for tauestimate,
 when matching on the generalized propensity score, using Abadie&Imbens(2012)'s method.
 This variance estimate takes into account of the uncertainty in estimating the GPS.
analysisidx is the index of units after trimming based on Crump et al. (2009)'s method.
}
\description{
multilevel treatment stratification on X

multilevel treatment matching on X
}
\examples{
  X<-c(5.5,10.6,3.1,8.7,5.1,10.2,9.8,4.4,4.9)
  Y<-c(102,105,120,130,100,80,94,108,96)
  W<-c(1,1,1,3,2,3,2,1,2)
  multilevelMatchX(Y,W,X)
  multilevelGPSMatch(Y,W,X,Trimming=0,GPSM="multinomiallogisticReg")
  multilevelGPSMatch(Y,W,X,Trimming=1,GPSM="multinomiallogisticReg")

 set.seed(111)
  n    <- 10000*6
  # X1-X3 3 MVN var 2, 1, 1, covars 1, -1, -.5
  vars   <- c(2,1,1)
  covars <- c(1,-1,-.5)
  mu     <- c(0,0,0)
  tau    <- 1
  Sigma <- diag(vars)
  Sigma[2,1] <- Sigma[1,2] <- covars[1]
  Sigma[3,1] <- Sigma[1,3] <- covars[2]
  Sigma[3,2] <- Sigma[2,3] <- covars[3]
  trt1 <- 500; trt1
  trt2 <- 500; trt2
  trt3 <- 500; trt3
  # draw Xs
  X13 <- mvrnorm(n,mu=mu,Sigma=Sigma, empirical = FALSE)
  X1 <- X13[,1]
  X2 <- X13[,2]
  X3 <- X13[,3]
  X4 <- runif(n,-3,3)
  X5 <- rchisq(n, df=1)
  X6 <- rbinom(n,size=1,prob=.5)

  xb2 <- 0.1*(X1^2+X2+X3+X4+X5+X6)
  xb3 <- 0.1*(X1+X2^2+X3^2+X4+X5+X6)
  exb2<-exp(xb2)
  exb3<-exp(xb3)
  pi1<-1/(1+exp(xb2)+exp(xb3))
  pi2<-exp(xb2)/(1+exp(xb2)+exp(xb3))
  pi3<-exp(xb3)/(1+exp(xb2)+exp(xb3))
  pi<-cbind(pi1,pi2,pi3)
  apply(pi,2,mean)

  W<-matrix(NA,n,4)
  colnames(W)   <- c("W1","W2","W3","W")
  for(kk in 1:n){
    W[kk,1:3]<-rmultinom(1, 1, prob = pi[kk,])
  }

  sim.dat <- data.frame(W,X1,X2,X3,X4,X5,X6)
  trt1.keep <- sample(which(sim.dat$W1==1),trt1,replace=FALSE)
  trt2.keep <- sample(which(sim.dat$W2==1),trt2,replace=FALSE)
  trt3.keep <- sample(which(sim.dat$W3==1),trt3,replace=FALSE)
  sim.dat <- sim.dat[c(trt1.keep,trt2.keep,trt3.keep),]
  sim.dat[,"W"]<-sim.dat[,"W1"]+2*sim.dat[,"W2"]+3*sim.dat[,"W3"]
  sim.dat[,"W"]<-as.factor(sim.dat[,"W"])
  W <- sim.dat[,"W"]
  X <- as.matrix(sim.dat[,names(sim.dat)[-c(1:4)]])
  X1 <- X[,"X1"]; X2 <- X[,"X2"]; X3 <- X[,"X3"]; X4 <- X[,"X4"]; X5 <- X[,"X5"];X6 <- X[,"X6"]

  # outcome: treatment effect is zero
  u  <- rnorm(nrow(X))
  # ouctome 1 (linear)
  Y <- 	(W==1)*(  X1 +   X2 +   X3 +   X4 +    X5-1 +     X6-0.5)+
    (W==2)*(2*X1 + 3*X2 +   X3 + 2*X4 + 2*(X5-1) + 2*(X6-0.5))+
    (W==3)*(3*X1 +   X2 + 2*X3 -   X4 -   (X5-1) -   (X6-0.5))+u

  TX<-X
  mattau2<-mean (2*TX[,1] + 3*TX[,2] +   TX[,3] + 2*TX[,4] + 2*(TX[,5]-1) + 2*(TX[,6]-0.5))-mean(  TX[,1] +   TX[,2] + TX[,3] +   TX[,4] +    TX[,5]-1 +     TX[,6]-0.5)
  mattau3<-mean (3*TX[,1] +   TX[,2] + 2*TX[,3] -   TX[,4] -   (TX[,5]-1) -   (TX[,6]-0.5))-mean(  TX[,1] +   TX[,2] + TX[,3] +   TX[,4] +    TX[,5]-1 +     TX[,6]-0.5)
  mattau23<-mean(3*TX[,1] +   TX[,2] + 2*TX[,3] -   TX[,4] -   (TX[,5]-1) -   (TX[,6]-0.5))-mean(2*TX[,1] + 3*TX[,2] + TX[,3] + 2*TX[,4] + 2*(TX[,5]-1) + 2*(TX[,6]-0.5))

  idp<-which(W!=3)
  TX<-X[idp,]
  pair2<-mean(2*TX[,1] + 3*TX[,2] + TX[,3] + 2*TX[,4] + 2*(TX[,5]-1) + 2*(TX[,6]-0.5))-mean(TX[,1] + TX[,2] + TX[,3] + TX[,4] + TX[,5]-1 + TX[,6]-0.5)
  idp<-which(W!=2)
  TX<-X[idp,]
  pair3<-mean(3*TX[,1] + TX[,2] + 2*TX[,3] - TX[,4] - (TX[,5]-1) - (TX[,6]-0.5))-mean(TX[,1] + TX[,2] + TX[,3] + TX[,4] + TX[,5]-1 + TX[,6]-0.5)
  idp<-which(W!=1)
  TX<-X[idp,]
  pair23<-mean(3*TX[,1] + TX[,2] + 2*TX[,3] - TX[,4] - (TX[,5]-1) - (TX[,6]-0.5))-mean(2*TX[,1] + 3*TX[,2] + TX[,3] + 2*TX[,4] + 2*(TX[,5]-1) + 2*(TX[,6]-0.5))

  estimand<-c(mattau2,mattau3,mattau23)
  match1<-multilevelMatchX(Y,W,X)
  match2<-multilevelGPSMatch(Y,W,X,Trimming=FALSE,GPSM="multinomiallogisticReg")
  match3<-multilevelGPSMatch(Y,W,X,Trimming=TRUE,GPSM="multinomiallogisticReg")
  match4<-multilevelGPSStratification(Y,W,X,NS=10,GPSM="multinomiallogisticReg",linearp=0,nboot=50)

  estimand
  c(match1$tauestimate,match1$varestimate)
  c(match2$tauestimate,match2$varestimate)
  c(match3$tauestimate,match3$varestimate)
  c(match4$tauestimate,match4$varestimate)

}
\seealso{
\code{\link{multilevelMatchX}},
\code{\link{multilevelGPSMatch}},
\code{\link{multilevelGPSStratification}}
\code{\link{overlap}}
\code{\link{estforboot}}
}

